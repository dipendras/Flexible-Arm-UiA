<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="FB_TorqueController" Id="{4419c06c-aafb-436e-b726-b61650f1597d}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_TorqueController
VAR_INPUT
	bEnable: BOOL;
	fShaftTorqueCmdNm: LREAL; // Torque input in NM in the shaft after gearbox
	fTorqueScaling: LREAL:= 2.99;
	fVelocityLimitHigh: LREAL:= 100; // [mm/s]
	fVelocityLimitLow: LREAL:= 0; // [mm/s]
	fTorqueRamp: LREAL:= 10.0; // // [%/s] 
	fGearRatio: LREAL := 1000;
	bStop: BOOL;
	bRelative: BOOL:= TRUE;
END_VAR
VAR_IN_OUT
	Axis: AXIS_REF;
END_VAR
VAR_OUTPUT
	fShaftSetTorqueNm: LREAL;
	fShaftTorqueFbkNm : LREAL;
	// Torque output
	bInTorque: BOOL;
	bBusy: BOOL;
	bActive: BOOL;
	bCommandAborted: BOOL;
	bError: BOOL;
	nErrId: UDINT;
	nMotorTempCelcius AT %I*: UINT;
END_VAR
VAR
	// Torque controller
	fbTorque: MC_TorqueControl;
	// Controller options
	stTorqueOptions: ST_TorqueControlOptions := (ManualTorqueStartValue:= 0, EnableManualTorqueStartValue:= FALSE); 	
	// Trigger on change in setpoint
	rTrigTorqueChange: R_Trig;
	


	fTorqueCmdNm: LREAL; // Torque input in NM
	fTorqueFbkNm: LREAL; // Torque output
	
	// Setpoint
	fSetTorquePerc : LREAL;
	fSetTorqueNm: LREAL;
	
	fTorqueCmdPercent: LREAL; // [%] Torque
	fTorqueCmdPercentOld: LREAL; // [%] Torque
	
	// Torque feedback
	fTorqueFbkPerc AT %I*: INT;	
	// Torque feedback
	nFastStopState AT %I*: UINT;
	nAccFbk AT %I*: DINT;	
	nVelFbk AT %I*: DINT;
	

	fTorqueFbkNmFiltered : LREAL;
	
	// Stop handling
	mcStop : MC_Stop;
	bStopDone           : BOOL;
	bStopBusy           : BOOL;
	bStopActive         : BOOL;
	bStopCommandAborted : BOOL;
	bStopError          : BOOL;
	nStopErrorID        : UDINT;
	rTrigStop: R_TRIG;
	fbMcPower : MC_POWER;
	
	eState: UDINT;
	
	
	//read  and write drive operation mode
	fbMC_ReadDriveOperationMode : MC_ReadDriveOperationMode;
	fbMC_WriteDriveOperationMode : MC_WriteDriveOperationMode;
	bReadDriveOperationMode : BOOL := FALSE;
	bWriteDriveOperationMode : BOOL := TRUE;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Don't Read torque feedback
// readFeedback();





fTorqueCmdNm := fShaftTorqueCmdNm/fGearRatio;

// Scale torque command in NM to percentage
fTorqueCmdPercent:= RescaleRange(fTorqueCmdNm, -fTorqueScaling, fTorqueScaling, -100, 100);
// Set falling edge before new setpoint
IF(fTorqueCmdPercent <> fTorqueCmdPercentOld) AND bEnable THEN
	fbTorque(Axis:= Axis, Execute:= FALSE);
END_IF
// Store current torque as old torque
fTorqueCmdPercentOld:= fTorqueCmdPercent;	


// Torque testing
fbTorque(
	Axis:= Axis,
	Execute:= bEnable,
	Relative:= bRelative, // Torque setpoint relative to current torque load???
	Torque:= fTorqueCmdPercent,
	TorqueRamp:= fTorqueRamp,
	VelocityLimitHigh:= fVelocityLimitHigh,
	VelocityLimitLow:= fVelocityLimitLow,
	BufferMode:= MC_BufferMode.MC_Aborting, // Abort current if new cmd
	Options:= stTorqueOptions,
	InTorque => bInTorque,
	Busy => bBusy,
	Active => bActive,
	CommandAborted => bCommandAborted,
	Error => bError,
	ErrorId => nErrId
);



// Torque setpoints (% and NM)
fSetTorquePerc:= Axis.NcToPlc.SetTorque;
fSetTorqueNm:= RescaleRange(fSetTorquePerc, -100, 100, -fTorqueScaling, fTorqueScaling);
fShaftSetTorqueNm := fSetTorqueNm*fGearRatio;



IF bEnable THEN
	bReadDriveOperationMode := TRUE;
	bWriteDriveOperationMode := FALSE;
ELSE
	bReadDriveOperationMode := FALSE;
	bWriteDriveOperationMode := TRUE;	
END_IF



fbMC_ReadDriveOperationMode(
		Axis := axis,
		Execute := bReadDriveOperationMode AND NOT bEnable
);


IF NOT(fbMC_ReadDriveOperationMode.Busy OR fbMC_ReadDriveOperationMode.Error) THEN
	bReadDriveOperationMode := FALSE;
END_IF

IF fbMC_ReadDriveOperationMode.DriveOperationMode <> E_DriveOperationMode.DriveOperationMode_Velo1 THEN
	fbMC_WriteDriveOperationMode(
		Axis := axis,
		Execute := bWriteDriveOperationMode AND NOT bEnable,
		DriveOperationMode := E_DriveOperationMode.DriveOperationMode_Velo1
);
END_IF

IF NOT(fbMC_WriteDriveOperationMode.Busy OR fbMC_WriteDriveOperationMode.Error) THEN
	bWriteDriveOperationMode := FALSE;
END_IF]]></ST>
    </Implementation>
    <Method Name="readFeedback" Id="{3d3db19b-15f7-430b-8473-dd60671defc5}">
      <Declaration><![CDATA[METHOD readFeedback : BOOL
VAR_INPUT

END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[// S-0-0084 Torque feedback value
// The parameter contains the current in one-tenth of a percent relative to P-0-0094 (Configured channel peak torque)
// (Hence signal range [-1000, 1000])
fTorqueFbkNm := RescaleRange(INT_TO_LREAL(fTorqueFbkPerc), -1000, 1000, -fTorqueScaling, fTorqueScaling);



// Calculate shaft torque after gearbox
fTorqueFbkNmFiltered := fTorqueFbkNm;
fShaftTorqueFbkNm:= fTorqueFbkNmFiltered * fGearRatio;]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_TorqueController">
      <LineId Id="3" Count="1" />
      <LineId Id="200" Count="0" />
      <LineId Id="197" Count="2" />
      <LineId Id="111" Count="0" />
      <LineId Id="110" Count="0" />
      <LineId Id="5" Count="28" />
      <LineId Id="201" Count="0" />
      <LineId Id="208" Count="0" />
      <LineId Id="196" Count="0" />
      <LineId Id="36" Count="3" />
      <LineId Id="209" Count="0" />
      <LineId Id="225" Count="0" />
      <LineId Id="224" Count="0" />
      <LineId Id="249" Count="0" />
      <LineId Id="257" Count="0" />
      <LineId Id="272" Count="0" />
      <LineId Id="274" Count="1" />
      <LineId Id="277" Count="0" />
      <LineId Id="258" Count="0" />
      <LineId Id="245" Count="1" />
      <LineId Id="253" Count="2" />
      <LineId Id="237" Count="0" />
      <LineId Id="256" Count="0" />
      <LineId Id="262" Count="0" />
      <LineId Id="259" Count="2" />
      <LineId Id="240" Count="0" />
      <LineId Id="236" Count="0" />
      <LineId Id="40" Count="0" />
      <LineId Id="266" Count="3" />
      <LineId Id="264" Count="1" />
      <LineId Id="243" Count="0" />
      <LineId Id="270" Count="1" />
      <LineId Id="2" Count="0" />
    </LineIds>
    <LineIds Name="FB_TorqueController.readFeedback">
      <LineId Id="3" Count="4" />
      <LineId Id="11" Count="2" />
      <LineId Id="17" Count="0" />
      <LineId Id="2" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>