<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.9">
  <POU Name="P_HMI" Id="{69c4f003-93ff-4784-b1ab-2d85338b70c3}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM P_HMI
VAR
	i : UINT;
	fbSafety_GroupPort_ErrAck 		: TOF := (PT := T#0.5S);
	fbSafety_EStopRestart 			: TOF := (PT := T#0.5S);
	fbSafety_Drive_Axis_ErrReset 	: TOF := (PT := T#0.5S);
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//------------------------------------------------------
//--------------------- HMI to PLC ---------------------

IF HmiToPlc.bPositionMode THEN
	// Attempt to enable position mode
	MAIN.robot.eRobotModeCmd := E_RobotMode.POSITION;
END_IF
HmiToPlc.bPositionMode := FALSE;

IF HmiToPlc.bVelocityMode THEN
	// Attempt to enable velocity mode
	MAIN.robot.eRobotModeCmd := E_RobotMode.VELOCITY;
END_IF
HmiToPlc.bVelocityMode := FALSE;

IF HmiToPlc.bTorqueMode THEN
	// Attempt to enable torque mode
//	MAIN.robot.eRobotModeCmd := E_RobotMode.TORQUE;	
END_IF
HmiToPlc.bTorqueMode := FALSE;

IF HmiToPlc.bSoftStop THEN
	// Stop
	MAIN.robot.eRobotModeCmd := E_RobotMode.STOP;	
END_IF
HmiToPlc.bSoftStop := FALSE;

MAIN.robot.bReset := HmiToPlc.bReset;
HmiToPlc.bReset := FALSE;

IF HmiToPlc.bEnable THEN
	// Enable joints
	MAIN.robot.bEnable := TRUE;
END_IF
HmiToPlc.bEnable := FALSE;

MAIN.robot.bPositionModeExecute := HmiToPlc.bPositionModeExecute;
HmiToPlc.bPositionModeExecute := FALSE;

fbSafety_GroupPort_ErrAck(IN := HmiToPlc.bSafety_GroupPort_ErrAck);
Safety.TS_Q_Safety_GroupPort_ErrAck := fbSafety_GroupPort_ErrAck.Q;
HmiToPlc.bSafety_GroupPort_ErrAck := FALSE;

fbSafety_EStopRestart(IN := HmiToPlc.bSafety_EStopRestart);
Safety.TS_Q_Safety_EStopRestart := fbSafety_EStopRestart.Q;
HmiToPlc.bSafety_EStopRestart := FALSE;

fbSafety_Drive_Axis_ErrReset(IN := HmiToPlc.bSafety_Drive_Axis_ErrReset);
Safety.TS_Q_Safety_Drive_Axis_ErrReset := fbSafety_Drive_Axis_ErrReset.Q;
HmiToPlc.bSafety_Drive_Axis_ErrReset := FALSE;

FOR i := 0 TO 2 DO
	MAIN.fPosInput[i] := HmiToPlc.fPosInput[i];
	MAIN.fVelInput[i] := HmiToPlc.fVelInput[i];
END_FOR

//------------------------------------------------------
//--------------------- PLC to HMI ---------------------

PlcToHmi.bPositionMode := (MAIN.robot.eRobotMode = E_RobotMode.POSITION);
PlcToHmi.bVelocityMode := (MAIN.robot.eRobotMode = E_RobotMode.VELOCITY);
PlcToHmi.bTorqueMode := (MAIN.robot.eRobotMode = E_RobotMode.TORQUE);

FOR i := 0 TO 2 DO
	PlcToHmi.fPosFb[i] := MAIN.robot.q[i];
	PlcToHmi.fVelFb[i] := MAIN.robot.q_t[i];
	PlcToHmi.fTauFb[i] := MAIN.robot.tau[i];
END_FOR

PlcToHmi.bAnyJointActive := MAIN.robot.bAnyJointActive;
PlcToHmi.bSafety_EStopError := Safety.TS_I_Safety_EStopError;
PlcToHmi.bSafety_EStopOK := Safety.TS_I_Safety_EStopOK;


]]></ST>
    </Implementation>
    <LineIds Name="P_HMI">
      <LineId Id="376" Count="73" />
      <LineId Id="16" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>